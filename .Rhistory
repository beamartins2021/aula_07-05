q4 <- read.table("tempos-anova.dat" head=T)
q4 <- read.table("tempos-anova.dat", head=T)
library(ggplot)
library(ggplot)
library(ggplot2)
source("compar-altern.R")
dados <- read.table("comparacao-ic.dat", head=TRUE)
dados <- read.table("comparacao-ic.dat", head=TRUE)
dados.ic <- geraIC(dados)
plotaIC(dados.ic)
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A))
dados.A.sha&p.value > alfa
dados.A.shap&p.value > alfa
dados.A.shap$p.value > alfa
View(dados.ic)
dados
dados.B.shap$p.value > alfa
dados.A.shap$p.value > alfa
dados.B.shap$p.value > alfa
(dados.B.shap = shapiro.test(dados$B))
dados.B.shap$p.value > alfa
(dados.C.shap = shapiro.test(dados$C))
dados.C.shap$p.value > alfa
hist(A)
hist(dados.A.shap)
hist(dados)
(dados.D.shap = shapiro.test(dados$D))
dados..shap$p.value > alfa
dados.D.shap$p.value > alfa
(dados.F.shap = shapiro.test(dados$F))
dados.F.shap$p.value > alfa
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A)) dados.A.shap$p.value > alfa
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A)) dados.A.shap$p.value > alfa
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A)) dados.A.shap$p.value > alfa
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A)) dados.A.shap$p.value > alfa
(dados.A.shap = shapiro.test(dados$A))
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A)) dados.A.shap$p.value > alfa
# seu código R aqui
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A))
dados.A.shap$p.value > alfa
(dados.B.shap = shapiro.test(dados$B))
dados.B.shap$p.value > alfa
(dados.C.shap = shapiro.test(dados$C))
dados.C.shap$p.value > alfa
(dados.D.shap = shapiro.test(dados$D))
dados.D.shap$p.value > alfa
(dados.E.shap = shapiro.test(dados$E))
dados.E.shap$p.value > alfa
(dados.F.shap = shapiro.test(dados$F))
dados.F.shap$p.value > alfa
#O shapiro tem como objetivo avaliar se uma distribuição é semelhante a uma distribuição normal. Quando p < alfa indica que tem diferença e quando p > alfa não há diferença.
# seu código R aqui
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A))
dados.A.shap$p.value > alfa
(dados.B.shap = shapiro.test(dados$B))
dados.B.shap$p.value > alfa
(dados.C.shap = shapiro.test(dados$C))
dados.C.shap$p.value > alfa
(dados.D.shap = shapiro.test(dados$D))
dados.D.shap$p.value > alfa
(dados.E.shap = shapiro.test(dados$E))
dados.E.shap$p.value > alfa
(dados.F.shap = shapiro.test(dados$F))
dados.F.shap$p.value > alfa
#O shapiro tem como objetivo avaliar se uma distribuição é semelhante a uma distribuição normal. #Quando p < alfa indica que tem diferença e quando p > alfa não há diferença.
(dados.AB.test = t.test(dados$A, dados$B, conf.level=nc, paired=FALSE))
dados.AB.test$p.value < alfa
(dados.CD.test = t.test(dados$C, dados$D, conf.level=nc, paired=FALSE))
dados.CD.test$p.value < alfa
(dados.EF.test = t.test(dados$E, dados$F, conf.level=nc, paired=FALSE))
dados.EF.test$p.value < alfa
dados.EF.test$conf.int
dados.AB.test$conf.int
dados.CD.test$conf.int
# seu código R aqui
dados
nc = 0.95
alfa = 1- nc
(dados.A.shap = shapiro.test(dados$A))
dados.A.shap$p.value > alfa
(dados.B.shap = shapiro.test(dados$B))
dados.B.shap$p.value > alfa
(dados.C.shap = shapiro.test(dados$C))
dados.C.shap$p.value > alfa
(dados.D.shap = shapiro.test(dados$D))
dados.D.shap$p.value > alfa
(dados.E.shap = shapiro.test(dados$E))
dados.E.shap$p.value > alfa
(dados.F.shap = shapiro.test(dados$F))
dados.F.shap$p.value > alfa
#O shapiro tem como objetivo avaliar se uma distribuição é semelhante a uma distribuição normal.
#Quando p < alfa indica que tem diferença e quando p > alfa não há diferença.
(dados.AB.test = t.test(dados$A, dados$B, conf.level=nc, paired=FALSE))
dados.AB.test$p.value < alfa
(dados.CD.test = t.test(dados$C, dados$D, conf.level=nc, paired=FALSE))
dados.CD.test$p.value < alfa
(dados.EF.test = t.test(dados$E, dados$F, conf.level=nc, paired=FALSE))
dados.EF.test$p.value < alfa
dados.AB.test$conf.int
dados.CD.test$conf.int
dados.EF.test$conf.int
reticulate::repl_python()
#! /usr/bin/env python
y
